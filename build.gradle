import net.ltgt.gradle.errorprone.CheckSeverity
buildscript {
    apply from: rootProject.file('gradle/dependencies.gradle')
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${deps.build.gradlePlugins.android}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${deps.build.gradlePlugins.kotlin}"
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:${deps.build.gradlePlugins.errorProne}"
        classpath "net.ltgt.gradle:gradle-nullaway-plugin:${deps.build.gradlePlugins.nullAway}"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:${deps.build.gradlePlugins.spotless}"
        classpath "com.google.protobuf:protobuf-gradle-plugin:${deps.build.gradlePlugins.protobuf}"
        classpath "com.vanniktech:gradle-maven-publish-plugin:${deps.build.gradlePlugins.mavenPublish}"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${deps.build.gradlePlugins.dokka}"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:${deps.build.gradlePlugins.dokka}"
    }
}

subprojects {
    repositories {
        google()
        mavenCentral()
    }

    apply from: rootProject.file('gradle/dependencies.gradle')
    apply plugin: 'com.diffplug.gradle.spotless'
    apply plugin: 'org.jetbrains.dokka-android'
    spotless {
        format 'misc', {
            target '**/*.md', '**/.gitignore'

            indentWithTabs()
            trimTrailingWhitespace()
            endWithNewline()
        }
        java {
            target "**/*.java"
            googleJavaFormat(deps.versions.gjf)
            licenseHeaderFile rootProject.file('spotless/copyright.java')
            removeUnusedImports()
            trimTrailingWhitespace()
            endWithNewline()
        }
        groovyGradle {
            target '**/*.gradle'
            trimTrailingWhitespace()
            endWithNewline()
        }
    }

    apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'net.ltgt.nullaway'
    dependencies {
        errorproneJavac deps.build.errorProneJavac
        errorprone deps.build.nullAway
        errorprone deps.build.errorProne
    }
    tasks.withType(JavaCompile).configureEach {
        options.errorprone.nullaway {
            severity = CheckSeverity.ERROR
            annotatedPackages.add("com.uber")
            unannotatedSubPackages.add("com.uber.simplestore.proto")
            treatGeneratedAsUnannotated = true
        }
        options.errorprone.disableWarningsInGeneratedCode = true
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply from: 'gradle/dependencies.gradle'
apply from: 'gradle/publish-docs.gradle'
